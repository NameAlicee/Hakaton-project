@model IEnumerable<HakatonProject.Models.Resourses>

@{
	ViewBag.Title = "Поиск ресурса";
}

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Поиск ресурса</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			<p class="control-label col-md-2">Название:</p>
			<div class="col-md-10">
				<input type="text" class="form-control" name="InputName" value="@ViewBag.InputName"/>
			</div>
		</div>
		<div class="form-group">
			<p class="control-label col-md-2">Жанр:</p>
			<div class="col-md-10">
				<input type="text" class="form-control" name="InputGenre" value="@ViewBag.InputGenre"/>
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Поиск" class="btn btn-default" />
			</div>
		</div>
	</div>
}

@if (Model != null)
{
	<table class="table">
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Name)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Genre)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.ResourseLocation.ID)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.ResourseTypes.Type_name)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Status1.status1)
			</th>
			<th></th>
		</tr>

		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Genre)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ResourseTypes.Type_name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Status1.status1)
				</td>
				<td>
					@Html.ActionLink("Показать место", "Location", new { id = item.ID }) 
				</td>
			</tr>
		}

	</table>
}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
